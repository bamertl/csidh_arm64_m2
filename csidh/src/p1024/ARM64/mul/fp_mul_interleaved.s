/* DO EDIT! generated by autogen */
.extern _inv_min_p_mod_r
.extern _p

.text
.align 4
/*
 [C_ADR]+1 = [C_ADR] + [B_ADR] * AI   
*/ 
.macro MUL_STEP_MACRO, C_ADR, AI, B_ADR, CARRY_REG, C0, C1, C2, C3, T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 
	adds \CARRY_REG, xzr, xzr  // CARRY_REG = 0 

	/* LIMBS C0-C3 */
	ldp \T0, \T1, [\B_ADR, #0]  // Load B 
	ldp \T2, \T3, [\B_ADR, #16]  
	ldp \C0, \C1, [\C_ADR, #0]  // Load C 
	ldp \C2, \C3, [\C_ADR, #16]  

	mul \T8, \AI, \T0  // B * AI 
	umulh \T9, \AI, \T0  
	mul \T10, \AI, \T1  
	umulh \T11, \AI, \T1  
	mul \T12, \AI, \T2  
	umulh \T13, \AI, \T2  
	mul \T14, \AI, \T3  
	umulh \T15, \AI, \T3  

	adcs \T8, \CARRY_REG, \T8  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T8, \T8, \C0  // add C0 
	adcs \T9, \CARRY_REG, \T9  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T9, \T9, \C1  // add C1 
	adcs \CARRY_REG, \CARRY_REG, xzr  
	adcs \T9, \T9, \T10  // add T 
	adcs \T10, \CARRY_REG, \T11  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T10, \T10, \C2  // add C2 
	adcs \CARRY_REG, \CARRY_REG, xzr  
	adcs \T10, \T10, \T12  // add T 
	adcs \T11, \CARRY_REG, \T13  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T11, \T11, \C3  // add C3 
	adcs \CARRY_REG, \CARRY_REG, xzr  
	adcs \T11, \T11, \T14  // add T 
	stp \T8, \T9, [\C_ADR, #0]  // Store C 
	stp \T10, \T11, [\C_ADR, #16]  
	adcs \CARRY_REG, \CARRY_REG, \T15  

	/* LIMBS C4-C7 */
	ldp \T0, \T1, [\B_ADR, #32]  // Load B 
	ldp \T2, \T3, [\B_ADR, #48]  
	ldp \C0, \C1, [\C_ADR, #32]  // Load C 
	ldp \C2, \C3, [\C_ADR, #48]  

	mul \T8, \AI, \T0  // B * AI 
	umulh \T9, \AI, \T0  
	mul \T10, \AI, \T1  
	umulh \T11, \AI, \T1  
	mul \T12, \AI, \T2  
	umulh \T13, \AI, \T2  
	mul \T14, \AI, \T3  
	umulh \T15, \AI, \T3  

	adcs \T8, \CARRY_REG, \T8  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T8, \T8, \C0  // add C4 
	adcs \T9, \CARRY_REG, \T9  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T9, \T9, \C1  // add C5 
	adcs \CARRY_REG, \CARRY_REG, xzr  
	adcs \T9, \T9, \T10  // add T 
	adcs \T10, \CARRY_REG, \T11  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T10, \T10, \C2  // add C6 
	adcs \CARRY_REG, \CARRY_REG, xzr  
	adcs \T10, \T10, \T12  // add T 
	adcs \T11, \CARRY_REG, \T13  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T11, \T11, \C3  // add C7 
	adcs \CARRY_REG, \CARRY_REG, xzr  
	adcs \T11, \T11, \T14  // add T 
	stp \T8, \T9, [\C_ADR, #32]  // Store C 
	stp \T10, \T11, [\C_ADR, #48]  
	adcs \CARRY_REG, \CARRY_REG, \T15  

	/* LIMBS C8-C11 */
	ldp \T0, \T1, [\B_ADR, #64]  // Load B 
	ldp \T2, \T3, [\B_ADR, #80]  
	ldp \C0, \C1, [\C_ADR, #64]  // Load C 
	ldp \C2, \C3, [\C_ADR, #80]  

	mul \T8, \AI, \T0  // B * AI 
	umulh \T9, \AI, \T0  
	mul \T10, \AI, \T1  
	umulh \T11, \AI, \T1  
	mul \T12, \AI, \T2  
	umulh \T13, \AI, \T2  
	mul \T14, \AI, \T3  
	umulh \T15, \AI, \T3  

	adcs \T8, \CARRY_REG, \T8  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T8, \T8, \C0  // add C8 
	adcs \T9, \CARRY_REG, \T9  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T9, \T9, \C1  // add C9 
	adcs \CARRY_REG, \CARRY_REG, xzr  
	adcs \T9, \T9, \T10  // add T 
	adcs \T10, \CARRY_REG, \T11  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T10, \T10, \C2  // add C10 
	adcs \CARRY_REG, \CARRY_REG, xzr  
	adcs \T10, \T10, \T12  // add T 
	adcs \T11, \CARRY_REG, \T13  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T11, \T11, \C3  // add C11 
	adcs \CARRY_REG, \CARRY_REG, xzr  
	adcs \T11, \T11, \T14  // add T 
	stp \T8, \T9, [\C_ADR, #64]  // Store C 
	stp \T10, \T11, [\C_ADR, #80]  
	adcs \CARRY_REG, \CARRY_REG, \T15  

	/* LIMBS C12-C15 */
	ldp \T0, \T1, [\B_ADR, #96]  // Load B 
	ldp \T2, \T3, [\B_ADR, #112]  
	ldp \C0, \C1, [\C_ADR, #96]  // Load C 
	ldp \C2, \C3, [\C_ADR, #112]  

	mul \T8, \AI, \T0  // B * AI 
	umulh \T9, \AI, \T0  
	mul \T10, \AI, \T1  
	umulh \T11, \AI, \T1  
	mul \T12, \AI, \T2  
	umulh \T13, \AI, \T2  
	mul \T14, \AI, \T3  
	umulh \T15, \AI, \T3  

	adcs \T8, \CARRY_REG, \T8  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T8, \T8, \C0  // add C12 
	adcs \T9, \CARRY_REG, \T9  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T9, \T9, \C1  // add C13 
	adcs \CARRY_REG, \CARRY_REG, xzr  
	adcs \T9, \T9, \T10  // add T 
	adcs \T10, \CARRY_REG, \T11  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T10, \T10, \C2  // add C14 
	adcs \CARRY_REG, \CARRY_REG, xzr  
	adcs \T10, \T10, \T12  // add T 
	adcs \T11, \CARRY_REG, \T13  // add carry 
	adcs \CARRY_REG, xzr, xzr  
	adcs \T11, \T11, \C3  // add C15 
	adcs \CARRY_REG, \CARRY_REG, xzr  
	adcs \T11, \T11, \T14  // add T 
	stp \T8, \T9, [\C_ADR, #96]  // Store C 
	stp \T10, \T11, [\C_ADR, #112]  
	adcs \CARRY_REG, \CARRY_REG, \T15  
	/* Store last C at [C_ADR]+1, which means offset: 128 */
	str \CARRY_REG, [\C_ADR, #128] 
/*
 [x0] = [x1] * [x2] mod [p] Interleaved Montgomery multiplication  
*/
.global _fp_mul3
_fp_mul3: 
